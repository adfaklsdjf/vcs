---

name: Run linter

on:
  push:
    paths:
      - dist/vcs
      - '*/workflows/*'
  pull_request:
  workflow_dispatch: # will allow running manually

jobs:
  build:
    runs-on: ubuntu-20.04
    env:
      shellcheck_tarball: shellcheck-stable.linux.x86_64.tar.xz
      shellcheck_url: https://github.com/koalaman/shellcheck/releases/download/stable/shellcheck-stable.linux.x86_64.tar.xz

    steps:
      # Use the latest stable version directly instead of downstream
      #- run: apt-get update -y && apt-get install -y --no-install-recommends shellcheck
      #- run: |
      #    if ! type -p wget || ! type -p xz ; then
      #      apt-get update -y && apt-get install -y --no-install-recommends wget xz-utils ;
      #    fi
      - run: wget ${{ env.shellcheck_url }}
      - run: tar xvf ${{ env.shellcheck_tarball }}
      # After checkout we won't necessarily be on the same directory
      # Can't move to /usr/bin on GitHub
      - name: Ensure shellcheck is accessible
        run: |
          test -x shellcheck-stable/shellcheck
          mkdir -p /usr/local/bin
          mv shellcheck-stable/shellcheck /usr/local/bin/
    
      - name: Checkout repository
        uses: actions/checkout@v3
      
      # Provide alternative formats, the second one is more readable but doesn't display as
      # well on the web UI
      - name: Validate script (short)
        continue-on-error: true
        # As of this writing I can't fully rely on shellcheck for linting, invoke it
        # to get a report, but don't fail on erors.
        # SC1007 is triggered by a stylistic choice
        # SC1056, SC1069 and SC1072 are incorrectly triggered due to syntax
        # SC1073 is fatal and interrupts parsing
        run: shellcheck -f gcc --exclude=SC1007 SC1072 vcs

      - name: Validate script (verbose)
        continue-on-error: true
        run: shellcheck --exclude=SC1007 vcs
